
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.JFileChooser;
import java.io.File; 
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Necho
 */
public class Screen extends javax.swing.JFrame {
    
    String Producciones="";
    Produccion test;
    Object[] columnNames;
    Object[][] data;
    
    /**
     * Creates new form Screen
     */;

    /**
     * Creates new form Screen
     */
    public Screen() {
        initComponents();
    }
      
     public void BuscarArchivo(){
        
      File archivo = null;
      FileReader fr = null;
      BufferedReader br = null;      
        
      try
        {
            archivo = new File ("C:\\Users\\Necho\\Desktop\\NUEVO SEMESTRE\\COMPILADORES\\Nueva Carpeta\\TablaM\\Prod_Prueba3.txt");
            
            /*JFileChooser fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
            int result = fileChooser.showOpenDialog(null);
            if (result == JFileChooser.APPROVE_OPTION) {
                archivo = fileChooser.getSelectedFile();
            }*/
           
            fr = new FileReader (archivo);
            br = new BufferedReader(fr);

            // Lectura del fichero
            String linea;
            while((linea=br.readLine())!=null)
            {
               Producciones=Producciones+linea+"\n";
               //Produccion prod=new Produccion(Producciones);
               //producciones.add(prod);
               
            }
        }
      catch(Exception e)
        {
            e.printStackTrace();
        }
      finally
        {
                try{                    
                     if( null != fr ){   
                           fr.close();     
                        }                  
                     }catch (Exception e2){ 
                        e2.printStackTrace();
                     }
        }
      
      jTextArea1.setText(Producciones);

    }
      
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Insertar Producciones");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Producciones");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jButton2.setText("Fix");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jTextArea4.setEditable(false);
        jTextArea4.setColumns(20);
        jTextArea4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextArea4.setRows(5);
        jScrollPane4.setViewportView(jTextArea4);

        jLabel2.setText("Primeros");

        jLabel3.setText("Siguientes");

        jTable1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(0, 204, 204));
        jScrollPane5.setViewportView(jTable1);

        jTable2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(jTable2);

        jLabel4.setText("Tabla M");

        jTextField1.setText("i*i+i$");
        jTextField1.setEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton3.setText("Reconocer");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane3)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane6)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                            .addComponent(jScrollPane3)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String KillRepeated(String s,boolean sw){
        //10 primeros caracteres substring(10)
        String[] test=s.split("\n");
        String[] test2=new String[test.length];
        String Salida="";   
        
        for(int i=0;i<test.length;i++){
            test2[i]=test[i].substring(0,10);
            test[i]=test[i].substring(12);
            test[i]=test[i].substring(0,test[i].length()-2);
            test[i]=test[i].replaceAll(" ", ""); 
            if(sw==true){
                test[i]=test[i].replaceAll("&", ""); 
            }
            test[i]=test[i].replaceAll("(.)(?=.*?\\1)","");//Ty StackOverflow
            Salida+=test2[i]+" { "+test[i]+" }\n";
        }
       
        return Salida;
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        BuscarArchivo();
        jButton2.setEnabled(true);
        
        String prods=jTextArea1.getText();
        test= new Produccion(prods);
      
    }//GEN-LAST:event_jButton1ActionPerformed
  
  private String getData(Object[][] M,Object[] columnNames, String NT,String T){
      int x=-1;
      int y=-1;
      String test;
      
      for(int i=1;i<columnNames.length;i++){
          test=(String)columnNames[i];
          if(T.equals(test)){
              x=i;
              break;
          }
      }
      for(int j=0;j<M.length;j++){
          test=(String)M[j][0];
          if(NT.equals(test)){
              y=j;
              break;
          }
      }
      
      if(x!=-1 && y!=-1){
          return (String)M[y][x];
      }else{
          return "Error";
      }
      
  }
    
    private Object[][] Replace(Object[][] M,Object[] columnNames, String NT,String T,String Asign) {
      int x=-1;
      int y=-1;
      String test;
      
      for(int i=1;i<columnNames.length;i++){
          test=(String)columnNames[i];
          if(T.equals(test)){
              x=i;
              break;
          }
      }
      
      for(int j=0;j<M.length;j++){
          test=(String)M[j][0];
          if(NT.equals(test)){
              y=j;
              break;
          }
      }
      System.out.println("pos["+x+","+y+"]");
      
      if(x!=-1 && y!=-1){
          M[y][x]=Asign;
      }
      
      return M;
  } 
    
  private Object[][] SgteProvisional(Object[][] M,String NT,String[] sgtes,Object[] columnNames){
      char[] test;
      for(int i=0;i<sgtes.length;i++){
          test=sgtes[i].toCharArray();
          if((test[0]+"").equals(NT)){
              //M=Replace(M);
              for(int j=1;j<test.length;j++){
                  M=Replace(M,columnNames,NT,""+test[j],NT+"->&");
              }
          }
      }     
      return M;
  }
  
  private String PrimProvisional(String text){
   
      String s=Producciones;
  
      ArrayList<Object> Matrix=Produccion.ConversorArray(s);
      String Salida="";
      char t=(text.toCharArray())[0];
      int ascii=(int) t;
      if(65<=ascii && 90>=ascii){
          Salida=Produccion.Prim(Matrix,""+t);
      }
      else{
          Salida=""+t;
      }
      
      return Salida;
  } 
  
    private Object[][] GeneraTablaM2(Object[][] M,String[] p,Object[] columnNames,String sgtes){
        String NT;
        String[] prueba;
        //p=Producciones.split("\n");

        String[] test=sgtes.split("\n");
        String[] test3=new String[test.length];
        for(int j=0;j<test.length;j++){
            test3[j]=test[j].substring(5,6);
            test[j]=test[j].substring(0,test[j].length()-1);// maybe quitar ese -1
            test3[j]+=test[j].substring(12);
            test3[j]=test3[j].replaceAll(" ", "");
            System.out.println(test3[j]);

        }

        for(int i=0;i<p.length;i++){
            NT=p[i].substring(0,1);
            p[i]=p[i].substring(3);//quito el noTerminal
            if(p[i].contains("&")){
                System.out.println("Se calcula sgte de "+NT);
                M=SgteProvisional(M,NT,test3,columnNames);
            }         
        }

        return M;
    }
  
   private Object[][] GeneraTablaM(Object[][] M,String[] p,Object[] columnNames){
        //a partir del 13avo   
        ArrayList<String> test=new ArrayList<>();
        char[] test3;
        String[] prueba;
        String test2;
        String NT;
        String T;

        for(int i=0;i<p.length;i++){
            NT=p[i].substring(0,1);
            p[i]=p[i].substring(3);//quito el noTerminal
            prueba=p[i].split("\\|");
            for(int j=0;j<prueba.length;j++){
                T=prueba[j];
                T=PrimProvisional(T);
                
                test3=T.toCharArray();
                for(int k=0;k<test3.length;k++){
                    M=Replace(M,columnNames,NT,""+test3[k],NT+"->"+prueba[j]);
                }
            }       
        }   
      
        return M;
    }
       
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jTextField1.setEnabled(true);
        jButton3.setEnabled(true);
        
        Producciones=Produccion.FixIt(Producciones);
      
        String Fixed=Producciones;
        Fixed=Produccion.FixIt(Fixed); 
        
        //Seguira factorizando mientras pueda :v      
        while(true){
            if (Fixed.equals(Produccion.FixIt(Fixed))){
                break;
            }else{
                Fixed=Produccion.FixIt(Fixed);
            }
        }     
        Producciones=Fixed;
        
        String Recursivo=Producciones;
        Recursivo=Produccion.RecIzq(Recursivo);
        
        //Seguira buscando recursividad izquierda mietnras pueda mientras pueda :v   
        while(true){
            if (Recursivo.equals(Produccion.RecIzq(Recursivo))){
                break;
            }else{
                Recursivo=Produccion.RecIzq(Recursivo);
            }
        } 

        Producciones=Recursivo;
        jTextArea2.setText(Producciones);      
     
        String first=Produccion.Primero(Producciones);
        first=KillRepeated(first,false);
        jTextArea3.setText(first);
         
        String next=Produccion.Siguiente(Producciones);
        next=KillRepeated(next,true);
        jTextArea4.setText(next); 
        
                        
       ArrayList<String> noTerminales=test.getPool();
       ArrayList<String> Terminales=Produccion.getTerminales(Producciones);
       Object[] T=Terminales.toArray();int tam1=T.length;
       System.out.println(tam1);
       Object[] nT=noTerminales.toArray(); int tam2=nT.length;
       System.out.println(tam2);
       
       String[][] table=new String[tam1][tam2];
        for(int i=0; i<tam1;i++){
            for(int j=0; j<tam2;j++){
                if(i==0){
                    table[i][j]=(String)nT[j];System.out.println((String)nT[j]);
                }
                else
                {
                    table[i][j]="   ";
                }
            }
        }
        T[0]="nT/T";
        
        //me salio mas facil transponer la matriz que buscar el error en el para anterior que me mostraba la tabla M
        String[][] table2=new String[tam2][tam1];
        for (int x=0; x < tam1; x++) {
            for (int y=0; y < tam2; y++) {
              table2[y][x] = table[x][y];
            }
        }
     
        //coordenadas [y](a partir del 1)[x](a partir del 0)
        //table2[0][3]="oli";
            
        columnNames =T;
        data=table2;
        data=GeneraTablaM(data,Producciones.split("\n"),columnNames);
        data=GeneraTablaM2(data,Producciones.split("\n"),columnNames,jTextArea4.getText());
        //JTable TableM = new JTable(data, columnNames);
        DefaultTableModel dtm= new DefaultTableModel(data, columnNames);
        
        jTable1.setModel(dtm);
               

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
  
    private void Reconocer(String Entrada,String Pila,String Accion,String Salida,ArrayList<String> Entradas,ArrayList<String> Pilas,ArrayList<String> Acciones,ArrayList<String> Salidas){       
        switch (Accion){
            case "Sustituye":
                Pila=Pila.substring(0, Pila.length()-1);
                String sCadena = Salida.substring(3);
                if(!sCadena.equals("&")){
                    String sCadenaInvertida="";
                    for (int x=sCadena.length()-1;x>=0;x--){
                        sCadenaInvertida = sCadenaInvertida + sCadena.charAt(x);
                    }
                    Pila+=sCadenaInvertida;
                }else{
                    Pila+="";
                }
                Entrada=Entrada;
                break;
            case "Avanza":
                Pila=Pila.substring(0,Pila.length()-1);
                Entrada=Entrada.substring(1);
                break;
        }
    
        char[] n=Pila.toCharArray();char m=n[n.length-1];
        String NT=Pila.substring(Pila.length()-1);
        String T="";
        if(Entrada.length()==1){
            T=Entrada; 
        }
        else{
            T=Entrada.substring(0,1); 
        }
        
        int ascii1;       
        ascii1=(int)m; 
        
        //Si lo que hay en el tope de la Pila es un Terminal...chequea si puede Sustituir
        if(ascii1<55 || ascii1>90){
            if(NT.equals(T)){
                if(!NT.equals("$")){
                    Accion="Avanza";
                    Salida=T;
                    Entradas.add(Entrada);
                    Pilas.add(Pila);
                    Acciones.add(Accion);
                    Salidas.add(Salida);
                    Reconocer(Entrada,Pila,Accion,Salida,Entradas,Pilas,Acciones,Salidas);
                }
                else{
                    Entradas.add(Entrada);
                    Pilas.add(Pila);
                    Acciones.add("ACEPTAR");
                    Salidas.add("");
                }
            }
            else{//no son iguales...error...no reconoce
                Entradas.add(Entrada);
                Pilas.add(Pila);
                Acciones.add("Error#1");
                Salidas.add("No Reconoce");
            }
        }else{
            String text=getData(data,columnNames,NT,T);
            System.out.println(NT+" "+T+" "+text);
            if(text.equals("Error")){
                Entradas.add(Entrada);
                Pilas.add(Pila);
                Acciones.add("Error#2");
                Salidas.add("No Reconoce");
            }else{
                Accion="Sustituye";
                Salida=text;
                Entradas.add(Entrada);
                Pilas.add(Pila);
                Acciones.add(Accion);
                Salidas.add(Salida);
                Reconocer(Entrada,Pila,Accion,Salida,Entradas,Pilas,Acciones,Salidas);
            }
        }
             
   }
    
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Object[] columnNames={"Pila","Entrada","Accion","Salida"};
        String Entrada=jTextField1.getText();
        String Pila="$"+Producciones.substring(0,1);
        String Accion="";
        String Salida="";
        ArrayList<String> Entradas=new ArrayList<>();
        ArrayList<String> Pilas=new ArrayList<>();
        ArrayList<String> Acciones=new ArrayList<>();
        ArrayList<String> Salidas=new ArrayList<>();
        
        //???
        //Profit
        Reconocer(Entrada,Pila,Accion,Salida,Entradas,Pilas,Acciones,Salidas);
        
        Object[][] data=new Object[Entradas.size()][4];
        for(int i=0;i<Entradas.size();i++){
            data[i][1]=Entradas.get(i);
            data[i][0]=Pilas.get(i);
            data[i][2]=Acciones.get(i);
            data[i][3]=Salidas.get(i);
        }
        DefaultTableModel dtm= new DefaultTableModel(data, columnNames);
        
        jTable2.setModel(dtm);
  
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Screen().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
